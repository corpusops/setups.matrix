---
# {{ansible_managed}}
version: '3'
networks:
  app_net:
    driver: bridge
    ipam: {driver: default, config: [{subnet: "{{matrix_network}}.0/24"}]}
services:
  db:
    networks: {app_net: {ipv4_address: "{{matrix_network}}.8"}}
    image: "{{matrix_pg_image}}"
    restart: always
    security_opt: ["seccomp=unconfined"]
    hostname: "{{matrix_domain}}"
    volumes: {{ matrix_db_volumes | to_nice_json }}
  coturn:
    networks: {app_net: {ipv4_address: "{{matrix_coturn_int_ip}}"}}
    extra_hosts:
    - "{{matrix_domain}}:{{matrix_int_ip}}"
    - "{{matrix_coturn_domain}}:{{matrix_coturn_int_ip}}"
    image: "{{matrix_coturn_image}}"
    restart: always
    hostname: "{{matrix_coturn_domain}}"
    ports:
      {% for i in [
        matrix_coturn_port, matrix_coturn_tlsport,
        matrix_coturn_altport, matrix_coturn_alttlsport] %}
      - "0.0.0.0:{{i}}:{{i}}"
      {% endfor %}
      # docker cant forward large range, overriden with custom iptables rules
      # and using specific IPs
    entrypoint:
      - bash
      - "-c"
      - >-
        set -ex;
        exec ./start.sh start
    volumes: {{ matrix_coturn_volumes | to_nice_json }}
  web:
    networks: {app_net: {ipv4_address: "{{matrix_int_ip}}"}}
    extra_hosts:
    - "{{matrix_domain}}:{{matrix_int_ip}}"
    - "{{matrix_coturn_domain}}:{{matrix_coturn_int_ip}}"
    image: "{{matrix_image}}"
    restart: always
    hostname: "{{matrix_domain}}"
    environment: [DOCKERIZE_VERSION=v0.6.0]
    ports:
      - "127.0.0.1:{{matrix_http_port}}:8008"
      - "127.0.0.1:{{matrix_https_port}}:8448"
      - "0.0.0.0:8448:8448"
    entrypoint:
      - bash
      - "-c"
      - >-
        set -ex;
        apt update;apt install -y curl postgresql-client;
        curl -L https://github.com/jwilder/dockerize/releases/download/$$DOCKERIZE_VERSION/dockerize-linux-amd64-$$DOCKERIZE_VERSION.tar.gz
        | tar xzvf -;
        if [ -f /ready ] ;then rm -f /ready;fi;
        ( set +ex;while true;do echo 'select 1'
        |psql -vON_ERROR_STOP=1
        'postgres://dbuser:{{matrix_db_password}}@db:5432/db'
        && touch /ready && break;
        sleep 1; echo retry db;done; )&
        ./dockerize -wait "file:///ready" -timeout 300s;
        exec ./start.sh start
    volumes: {{  matrix_volumes |to_nice_json }}
  riot:
    image: "{{matrix_riot_image}}"
    restart: always
    hostname: "{{matrix_riot_hosts[0]}}"
    networks: {app_net: {ipv4_address: "{{matrix_network}}.3"}}
    environment:
      - "DOMAINS={{matrix_riot_domain}}"
      - "DEFAULT_HS_URL=https://{{matrix_domain}}"
      - "DEFAULT_IS_URL=https://{{matrix_mxisd_hosts[0]}}"
      - "INTEGRATIONS_UI_URL={{matrix_integrations_url}}"
      - "INTEGRATIONS_REST_URL={{matrix_integrations_api_url}}"
      - >-
        INTEGRATIONS_WIDGETS_URL={{matrix_integrations_widgets_urls|to_json}}
      - "INTEGRATIONS_WIDGETSJITSI_URL={{matrix_integrations_jitsi_widgets_url}}"
    ports:
      - "127.0.0.1:{{matrix_riot_port}}:8080"
  mxisd:
    image: "{{matrix_mxisd_image}}"
    restart: always
    networks: {app_net: {ipv4_address: "{{matrix_network}}.4"}}
    environment:
      - CONF_FILE_PATH=/etc/mxisd/mxisd.yaml
    hostname: "{{matrix_mxisd_hosts[0]}}"
    entrypoint:
      - sh
      - -c
      - >
        apk update && apk add bash
        && /mxisd_start.sh
    volumes: {{matrix_mxisd_volumes| to_nice_json}}
    ports:
      - "127.0.0.1:{{matrix_mxisd_port}}:8090"
  goneb:
    image: "{{matrix_goneb_image}}"
    networks: {app_net: {ipv4_address: "{{matrix_network}}.5"}}
    environment:
      - "BASE_URL=http://localhost:4050"
    restart: always
    ports:
      - "{{matrix_makneb_port}}:4050"
    volumes: {{matrix_goneb_volumes| to_nice_json}}
  backup:
    image: "{{matrix_backup_image}}"
    networks: {app_net: {ipv4_address: "{{matrix_network}}.10"}}
    restart: always
    volumes: {{ matrix_backup_volumes | to_nice_json }}
  dimension:
    image: "{{matrix_dimension_image}}"
    networks: {app_net: {ipv4_address: "{{matrix_network}}.11"}}
    environment: []
    restart: always
    ports:
      - "{{matrix_dimension_port}}:8184"
    volumes: {{matrix_dimension_volumes| to_nice_json}}
# vim: set ft=sls :
